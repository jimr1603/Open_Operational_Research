install.packages("htmlwidgets")
blogdown::new_site()
install.packages("devtools")
library("tidyverse")
library("tibble")
library("tibble")
library("data.table")
setwd("~/bin/R/DH")
rm(list=ls())
c <- read.csv("DWP Organogram 31-Sept-2017_2-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("DWP Organogram 31-Sept-2017_2-senior.csvv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
juniors = c[,.(N=sum(Number.of.Posts.in.FTE),min=min(Payscale.Minimum....),max=max(Payscale.Maximum....)),by=Grade]
seniors = d[!(Name %in% c("N/D","ELIMINIATED", "VACANT")),.(N=sum(FTE),min=max(Actual.Pay.Floor....),max=max(Actual.Pay.Ceiling....)),by=Grade..or.equivalent.]
library("data.table")
setwd("~/bin/R/DH")
rm(list=ls())
c <- read.csv("DWP Organogram 31-Sept-2017_2-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("DWP Organogram 31-Sept-2017_2-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
View(d)
juniors = c[,.(N=sum(Number.of.Posts.in.FTE),min=min(Payscale.Minimum....),max=max(Payscale.Maximum....)),by=Grade]
seniors = d[!(Name %in% c("N/D","ELIMINIATED", "VACANT")),.(N=sum(FTE),min=max(Actual.Pay.Floor....),max=max(Actual.Pay.Ceiling....)),by=Grade..or.equivalent.]
View(juniors)
c <- read.csv("DWP Organogram 31-Sept-2017_2-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("DWP Organogram 31-Sept-2017_2-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
juniors <- juniors[,N=(strsplit(Number.of.Posts.in.FTE,"/"))[2]]
juniors <- juniors[,N=(strsplit(Number.of.Posts.in.FTE,"/")[2]])
juniors <- juniors[,N=(strsplit(Number.of.Posts.in.FTE,"/")[2])]
juniors <- juniors[,N=(strsplit(Number.of.Posts.in.FTE,"/")]
juniors = c[,.(N=sum(Number.of.Posts.in.FTE),min=min(Payscale.Minimum....),max=max(Payscale.Maximum....)),by=Grade]
seniors = d[!(Name %in% c("N/D","ELIMINIATED", "VACANT")),.(N=sum(FTE),min=max(Actual.Pay.Floor....),max=max(Actual.Pay.Ceiling....)),by=Grade..or.equivalent.]
setnames(seniors, "Grade..or.equivalent.", "Grade")
combined <- rbindlist(list(juniors,seniors))
combined <- combined[order(min)]
combined[,cumulative:=cumsum(N)]
total_staff <- combined[,sum(N)]
median_record <- combined[cumulative>total_staff/2][1]
median_salary = median_record[,min]
total_bill_min <- combined[,sum(N*min)]
total_hours <- (365.25 / 7 * 5 - 25 -9) * (37/5)
avg_hourly <- median_salary/total_hours
avg_minutely <- avg_hourly/60
View(juniors)
juniors <- juniors[,Grade=(strsplit(Grade,"/")]
juniors = c[,.(N=sum(Number.of.Posts.in.FTE),min=min(Payscale.Minimum....),max=max(Payscale.Maximum....)),by=Grade]
seniors = d[!(Name %in% c("N/D","ELIMINIATED", "VACANT")),.(N=sum(FTE),min=max(Actual.Pay.Floor....),max=max(Actual.Pay.Ceiling....)),by=Grade..or.equivalent.]
setnames(seniors, "Grade..or.equivalent.", "Grade")
combined <- rbindlist(list(juniors,seniors))
combined <- combined[order(min)]
combined[,cumulative:=cumsum(N)]
total_staff <- combined[,sum(N)]
median_record <- combined[cumulative>total_staff/2][1]
median_salary = median_record[,min]
total_bill_min <- combined[,sum(N*min)]
total_hours <- (365.25 / 7 * 5 - 25 -9) * (37/5)
avg_hourly <- median_salary/total_hours
avg_minutely <- avg_hourly/60
juniors <- juniors[,Grade=(strsplit(Grade),"/")]
juniors <- juniors[,Grade=(strsplit(Grade,"/"))]
juniors <- juniors[,Grade=(strsplit(Grade,"/"))]
juniors <- juniors[,Grade:=(strsplit(Grade,"/"))]
View(juniors)
juniors <- juniors[,Grade:=(strsplit(Grade,"/")[2])]
c <- as.data.table(c)
d<- as.data.table(d)
juniors <- juniors[,Grade:=(strsplit(Grade,"/")[2])]
View(juniors)
c <- read.csv("DWP Organogram 31-Sept-2017_2-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("DWP Organogram 31-Sept-2017_2-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
juniors <- juniors[,Grade:=(strsplit(Grade,"/")[2])]
View(juniors)
juniors <- juniors[,Grade:=(strsplit(Grade,"/")][,Grade:=Grade[2]]
juniors = c[,.(N=sum(Number.of.Posts.in.FTE),min=min(Payscale.Minimum....),max=max(Payscale.Maximum....)),by=Grade]
seniors = d[!(Name %in% c("N/D","ELIMINIATED", "VACANT")),.(N=sum(FTE),min=max(Actual.Pay.Floor....),max=max(Actual.Pay.Ceiling....)),by=Grade..or.equivalent.]
setnames(seniors, "Grade..or.equivalent.", "Grade")
combined <- rbindlist(list(juniors,seniors))
combined <- combined[order(min)]
combined[,cumulative:=cumsum(N)]
total_staff <- combined[,sum(N)]
median_record <- combined[cumulative>total_staff/2][1]
median_salary = median_record[,min]
total_bill_min <- combined[,sum(N*min)]
total_hours <- (365.25 / 7 * 5 - 25 -9) * (37/5)
avg_hourly <- median_salary/total_hours
avg_minutely <- avg_hourly/60
View(juniors)
c <- read.csv("DWP Organogram 31-Sept-2017_2-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("DWP Organogram 31-Sept-2017_2-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
juniors <- juniors[,Grade:=strsplit(Grade,"/") ][,Grade:=Grade[2]]
View(juniors)
c <- read.csv("DWP Organogram 31-Sept-2017_2-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("DWP Organogram 31-Sept-2017_2-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
juniors <- juniors[,Grade:=strsplit(Grade,"/") ]
View(juniors)
c <- read.csv("DWP Organogram 31-Sept-2017_2-junior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
juniors <- juniors[,Grade:=strsplit(Grade,"/") ]
juniors <- juniors[,Grade:=strsplit(Grade,"\/") ]
juniors <- juniors[,Grade:=strsplit(Grade,"/",fixed = T) ]
juniors <- juniors[,Grade:=strsplit(Grade,"//",) ]
c <- read.csv("DWP Organogram 31-Sept-2017_2-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("DWP Organogram 31-Sept-2017_2-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
juniors <- juniors[,Grade:=strsplit(Grade,"//",) ]
library("data.table")
setwd("~/bin/R/DH")
rm(list=ls())
c <- read.csv("DWP Organogram 31-Sept-2017_2-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("DWP Organogram 31-Sept-2017_2-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
juniors = c[,.(N=sum(Number.of.Posts.in.FTE),min=min(Payscale.Minimum....),max=max(Payscale.Maximum....)),by=Grade]
seniors = d[!(Name %in% c("N/D","ELIMINIATED", "VACANT")),.(N=sum(FTE),min=max(Actual.Pay.Floor....),max=max(Actual.Pay.Ceiling....)),by=Grade..or.equivalent.]
setnames(seniors, "Grade..or.equivalent.", "Grade")
combined <- rbindlist(list(juniors,seniors))
combined <- combined[order(min)]
combined[,cumulative:=cumsum(N)]
total_staff <- combined[,sum(N)]
median_record <- combined[cumulative>total_staff/2][1]
median_salary = median_record[,min]
total_bill_min <- combined[,sum(N*min)]
total_hours <- (365.25 / 7 * 5 - 25 -9) * (37/5)
avg_hourly <- median_salary/total_hours
avg_minutely <- avg_hourly/60
print(total_staff)
print(median_salary)
print(total_bill_min)
library("data.table")
setwd("~/bin/R/DH")
rm(list=ls())
c <- read.csv("DWP Organogram 31-Sept-2017_2-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("DWP Organogram 31-Sept-2017_2-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
juniors = c[,.(N=sum(Number.of.Posts.in.FTE),min=min(Payscale.Minimum....),max=max(Payscale.Maximum....)),by=Grade]
seniors = d[!(Name %in% c("N/D","ELIMINIATED", "VACANT")),.(N=sum(FTE),min=max(Actual.Pay.Floor....),max=max(Actual.Pay.Ceiling....)),by=Grade..or.equivalent.]
setnames(seniors, "Grade..or.equivalent.", "Grade")
combined <- rbindlist(list(juniors,seniors))
combined <- combined[order(min)]
combined[,cumulative:=cumsum(N)]
total_staff <- combined[,sum(N)]
median_record <- combined[cumulative>total_staff/2][1]
median_salary = median_record[,min]
total_bill_min <- combined[,sum(N*min)]
total_hours <- (365.25 / 7 * 5 - 25 -9) * (37/5)
avg_hourly <- median_salary/total_hours
avg_minutely <- avg_hourly/60
print(total_staff)
print(median_salary)
print(total_bill_min)
avg_minutely <- avg_hourly/60
library("data.table")
setwd("~/bin/R/DH")
rm(list=ls())
c <- read.csv("DWP Organogram 31-Sept-2017_2-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("DWP Organogram 31-Sept-2017_2-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
juniors = c[,.(N=sum(Number.of.Posts.in.FTE),min=min(Payscale.Minimum....),max=max(Payscale.Maximum....)),by=Grade]
seniors = d[!(Name %in% c("N/D","ELIMINIATED", "VACANT")),.(N=sum(FTE),min=max(Actual.Pay.Floor....),max=max(Actual.Pay.Ceiling....)),by=Grade..or.equivalent.]
setnames(seniors, "Grade..or.equivalent.", "Grade")
combined <- rbindlist(list(juniors,seniors))
combined <- combined[order(min)]
combined[,cumulative:=cumsum(N)]
total_staff <- combined[,sum(N)]
median_record <- combined[cumulative>total_staff/2][1]
median_salary = median_record[,min]
total_bill_min <- combined[,sum(N*min)]
total_hours <- (365.25 / 7 * 5 - 25 -9) * (37/5)
avg_hourly <- median_salary/total_hours
avg_minutely <- avg_hourly/60
print(total_staff)
print(median_salary)
print(total_bill_min)
avg_minutely
avg_hourly
library("data.table")
setwd("~/bin/R/DH")
rm(list=ls())
c <- read.csv("department-of-health__31-03-2016__dh_010416-DH-Organogram-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("department-of-health__31-03-2016__dh_010416-DH-Organogram-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
juniors = c[,.(N=sum(Number.of.Posts.in.FTE),min=min(Payscale.Minimum....),max=max(Payscale.Maximum....)),by=Grade]
seniors = d[!(Name %in% c("N/D","ELIMINIATED", "VACANT")),.(N=sum(FTE),min=max(Actual.Pay.Floor....),max=max(Actual.Pay.Ceiling....)),by=Grade..or.equivalent.]
setnames(seniors, "Grade..or.equivalent.", "Grade")
combined <- rbindlist(list(juniors,seniors))
combined <- combined[order(min)]
combined[,cumulative:=cumsum(N)]
total_staff <- combined[,sum(N)]
median_record <- combined[cumulative>total_staff/2][1]
median_salary = median_record[,min]
total_bill_min <- combined[,sum(N*min)]
total_hours <- (365.25 / 7 * 5 - 25 -9) * (37/5)
avg_hourly <- median_salary/total_hours
avg_minutely <- avg_hourly/60
print(total_staff)
print(median_salary)
print(total_bill_min)
avg_hourly
library("ggplot2")
setwd("~/bin/R/Open Operational Research")
library("ggplot2")
ggplot(data=combined) + geom_col(
)
ggplot(data=combined, aes=(x=Grade,y=N)) + geom_col(
)
ggplot(data=combined, aes=(x=Grade,y=N)) + geom_col()
ggplot(data=combined, aes=(x=Grade, y=N)) + geom_col()
?ggplot
ggplot(data=combined, aes=(Grade, N)) + geom_col()
ggplot(data=combined, aes=(Grade)) + geom_col()
?aes
ggplot(data=combined, aes=(Grade, N)) + geom_col()
ggplot(data=combined, aes(Grade, N)) + geom_col()
ggplot(data=combined, aes(Grade, N)) + geom_col()
combined <- combined[order(min)]
ggplot(data=combined, aes(Grade, N)) + geom_col()
library(ggplot2)
library("data.table")
setwd("~/bin/R/DH")
rm(list=ls())
c <- read.csv("DWP Organogram 31-Sept-2017_2-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("DWP Organogram 31-Sept-2017_2-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
juniors = c[,.(N=sum(Number.of.Posts.in.FTE),min=min(Payscale.Minimum....),max=max(Payscale.Maximum....)),by=Grade]
seniors = d[!(Name %in% c("N/D","ELIMINIATED", "VACANT")),.(N=sum(FTE),min=max(Actual.Pay.Floor....),max=max(Actual.Pay.Ceiling....)),by=Grade..or.equivalent.]
setnames(seniors, "Grade..or.equivalent.", "Grade")
combined <- rbindlist(list(juniors,seniors))
combined <- combined[order(min)]
combined[,cumulative:=cumsum(N)]
total_staff <- combined[,sum(N)]
median_record <- combined[cumulative>total_staff/2][1]
median_salary = median_record[,min]
total_bill_min <- combined[,sum(N*min)]
total_hours <- (365.25 / 7 * 5 - 25 -9) * (37/5)
avg_hourly <- median_salary/total_hours
avg_minutely <- avg_hourly/60
print(total_staff)
print(median_salary)
print(total_bill_min)
avg_hourly
ggplot(data=combined, aes(Grade, N)) + geom_col()
library("data.table")
library("ggplot2")
setwd("~/bin/R/DH")
rm(list=ls())
c <- read.csv("department-of-health__31-03-2016__dh_010416-DH-Organogram-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("department-of-health__31-03-2016__dh_010416-DH-Organogram-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
juniors = c[,.(N=sum(Number.of.Posts.in.FTE),min=min(Payscale.Minimum....),max=max(Payscale.Maximum....)),by=Grade]
seniors = d[!(Name %in% c("N/D","ELIMINIATED", "VACANT")),.(N=sum(FTE),min=max(Actual.Pay.Floor....),max=max(Actual.Pay.Ceiling....)),by=Grade..or.equivalent.]
setnames(seniors, "Grade..or.equivalent.", "Grade")
combined <- rbindlist(list(juniors,seniors))
combined <- combined[order(min)]
combined[,cumulative:=cumsum(N)]
total_staff <- combined[,sum(N)]
median_record <- combined[cumulative>total_staff/2][1]
median_salary = median_record[,min]
total_bill_min <- combined[,sum(N*min)]
total_hours <- (365.25 / 7 * 5 - 25 -9) * (37/5)
avg_hourly <- median_salary/total_hours
avg_minutely <- avg_hourly/60
total_staff
median_salary
total_bill_min
avg_hourly
ggplot(data=combined, aes(Grade, N)) + geom_col()
?aes
blogdown::serve_site()
setwd("~/bin/R/Open Operational Research/")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
---
title: Open Organograms
author: James Riley
date: '2018-03-26'
slug: open-organograms
categories:
- R
tags:
- data.gov.uk
- tidyverse
- data.table
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(collapse = TRUE)
print(getpwd())
library("data.table")
```
##Background
One of the reasons I've founded this site is because I've discovered https://data.gov.uk/ and I have ideas. In particular, I won't discuss outside of work anything I only know through work, so it was nice to see pay data in the public sphere.
Full background is at http://guidance.data.gov.uk/organogram-data.html but basically, the Prime Minister decided that the public deserve the structure and hierarchy of the Government Departments, and a few agencies.
For reference, there's a good table on [Wikipedia](https://en.wikipedia.org/wiki/Civil_Service_(United_Kingdom)#Grading_schemes) explaining what our grading structure is, including some infor the MOD have given comparing grades in Civil and Military Service.
##Processing
I have decided that not all of these posts will be final finished polished pieces but will include some work in progress.
Naturally, the first dataset I grabbed was that for the Department of Health and Social Care. Immediately there is a problem - the background above says that the PM wanted everyone to release the data 2ce a year, but our last drop was in 2016. Very often in messing around with data you find that it's out of date. The other thing you find is that there are data standards which get widely ignored.
For now I'm interested in finding median salary, and what a department costs per minute/hour. I need the ggplot practise, so I'm doing some column charts of the distributions too.
##DHSC
This went reasonably smoothly, possibly given that I know the grading scheme. Someone along the line had decided that we wanted info on removed Senior Civil Servants, so I had to filter them out. This processing was done on a data.table framework.
```{r}
c <- read.csv("./data/department-of-health__31-03-2016__dh_010416-DH-Organogram-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("./data/department-of-health__31-03-2016__dh_010416-DH-Organogram-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
```
```{r}
juniors = c[,.(N=sum(Number.of.Posts.in.FTE),min=min(Payscale.Minimum....),max=max(Payscale.Maximum....)),by=Grade]
seniors = d[!(Name %in% c("N/D","ELIMINIATED", "VACANT")),.(N=sum(FTE),min=max(Actual.Pay.Floor....),max=max(Actual.Pay.Ceiling....)),by=Grade..or.equivalent.]
```
Then I wanted to append one table to the other. For that they need column names that match. Since I want to find a median I need a cumalitive sum, and to find the middle person.
```{r}
combined <- combined[order(min)]
combined[,cumulative:=cumsum(N)]
total_staff <- combined[,sum(N)]
median_record <- combined[cumulative>total_staff/2][1]
median_salary = median_record[,min]
```
Then total bill over an estimate at total hours worked in a year gives me the total bill for the department per hour and per minute.
```{total_bill_min <- combined[,sum(N*min)]
total_hours <- (365.25 / 7 * 5 - 25 -9) * (37/5)
avg_hourly <- median_salary/total_hours
avg_minutely <- avg_hourly/60
```}
And so I get my outputs, which I've not nicely formatted yet.
```{r}
total_staff
median_salary
total_bill_min
avg_hourly
ggplot(data=combined, aes(Grade, N)) + geom_col()
```
getwd()
source('~/bin/R/DH/organ.R')
install.package("here")
instal.package("here")
install.packages("here")
blogdown::serve_site()
setwd("~/bin/R/Open Operational Research/")
knitr::opts_chunk$set(collapse = TRUE)
library("data.table")
d <-read.csv(here("data", "department-of-health__31-03-2016__dh_010416-DH-Organogram-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d <-read.csv(here("data", "department-of-health__31-03-2016__dh_010416-DH-Organogram-senior.csv", ) stringsAsFactors = FALSE)
d <-read.csv(here("data", "department-of-health__31-03-2016__dh_010416-DH-Organogram-senior.csv"), stringsAsFactors = FALSE)
```{r setup, include=FALSE}
knitr::opts_chunk$set(collapse = TRUE)
library("data.table")
library("here")
```
library("data.table")
library("here")
c <- read.csv(here("data", "department-of-health__31-03-2016__dh_010416-DH-Organogram-junior.csv", stringsAsFactors = FALSE))
c <- read.csv(here("data", "department-of-health__31-03-2016__dh_010416-DH-Organogram-junior.csv"), stringsAsFactors = FALSE)
d <-read.csv(here("data", "department-of-health__31-03-2016__dh_010416-DH-Organogram-senior.csv"), stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
total_bill_min <- combined[,sum(N*min)]
total_bill_min <- combined[,sum(N*min)]
total_bill_min <- combined[,sum(N*min)]
combined <- rbindlist(list(juniors,seniors))
combined <- rbindlist(list(juniors,seniors))
blogdown::serve_site()
blogdown::serve_site()
library("data.table")
library("ggplot2")
setwd("~/bin/R/DH")
rm(list=ls())
c <- read.csv("department-of-health__31-03-2016__dh_010416-DH-Organogram-junior.csv", stringsAsFactors = FALSE)
d <-read.csv("department-of-health__31-03-2016__dh_010416-DH-Organogram-senior.csv", stringsAsFactors = FALSE)
c <- as.data.table(c)
d<- as.data.table(d)
juniors = c[,.(N=sum(Number.of.Posts.in.FTE),min=min(Payscale.Minimum....),max=max(Payscale.Maximum....)),by=Grade]
seniors = d[!(Name %in% c("N/D","ELIMINIATED", "VACANT")),.(N=sum(FTE),min=max(Actual.Pay.Floor....),max=max(Actual.Pay.Ceiling....)),by=Grade..or.equivalent.]
setnames(seniors, "Grade..or.equivalent.", "Grade")
combined <- rbindlist(list(juniors,seniors))
combined <- combined[order(min)]
combined[,cumulative:=cumsum(N)]
total_staff <- combined[,sum(N)]
median_record <- combined[cumulative>total_staff/2][1]
median_salary = median_record[,min]
total_bill_min <- combined[,sum(N*min)]
total_hours <- (365.25 / 7 * 5 - 25 -9) * (37/5)
avg_hourly <- median_salary/total_hours
avg_minutely <- avg_hourly/60
total_staff
median_salary
total_bill_min
avg_hourly
ggplot(data=combined, aes(Grade, N)) + geom_col()
View(combined)
combined[,Grade]
order(combined[,Grade])
order(combined[,Grade]) <- 1:10
levels((combined[,Grade])
levels(combined[,Gra])
levels(combined[,Grade])
library("data.table")
library("ggplot2")
setwd("~/bin/R/DH")
rm(list=ls())
c <- read.csv("department-of-health__31-03-2016__dh_010416-DH-Organogram-junior.csv")
d <-read.csv("department-of-health__31-03-2016__dh_010416-DH-Organogram-senior.csv")
c <- as.data.table(c)
d<- as.data.table(d)
juniors = c[,.(N=sum(Number.of.Posts.in.FTE),min=min(Payscale.Minimum....),max=max(Payscale.Maximum....)),by=Grade]
seniors = d[!(Name %in% c("N/D","ELIMINIATED", "VACANT")),.(N=sum(FTE),min=max(Actual.Pay.Floor....),max=max(Actual.Pay.Ceiling....)),by=Grade..or.equivalent.]
setnames(seniors, "Grade..or.equivalent.", "Grade")
combined <- rbindlist(list(juniors,seniors))
combined <- combined[order(min)]
combined[,cumulative:=cumsum(N)]
total_staff <- combined[,sum(N)]
median_record <- combined[cumulative>total_staff/2][1]
median_salary = median_record[,min]
total_bill_min <- combined[,sum(N*min)]
total_hours <- (365.25 / 7 * 5 - 25 -9) * (37/5)
avg_hourly <- median_salary/total_hours
avg_minutely <- avg_hourly/60
total_staff
median_salary
total_bill_min
avg_hourly
ggplot(data=combined, aes(Grade, N)) + geom_col()
combined[,Grade]
levels(combined[,Gra])
levels(combined[,Grade])
levels(combined[,Grade]) <- order(combined[,min])
levels(combined[,Grade])
levels(combined[,Grade]) <- c("AO", "EO", "HEO", "FS", "SEO", "G7", "G6", "SCS1", "SCS2", "SCS3", "SCS4")
levels(combined[,Grade])
levels(combined$Grade)<- c("AO", "EO", "HEO", "FS", "SEO", "G7", "G6", "SCS1", "SCS2", "SCS3", "SCS4")
ggplot(data=combined, aes(Grade, N)) + geom_col()
setwd("~/bin/R/Open Operational Research/")
levels(combined$Grade) <- factor(sort(combined)))
levels(combined$Grade) <- factor(sort(combined))
levels(combined$Grade) <- factor(sort(combined[,min]))
ggplot(data=combined, aes(Grade, N)) + geom_col()
blogdown::serve_site()
blogdown::serve_site()
1/2 *3
