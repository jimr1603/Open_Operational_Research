t <- tibble(n=1:30)
t <- t %>% mutate(micro = map(t$n,f))
map(t$micro, unlist)
mutate(t,map(t$micro, unlist))
t <- t %>%
mutate(micro = map(t$n,f))%>%
mutate(map(t$micro, unlist))
View(t)
t <- t %>%
mutate(micro = map(t$n,f))%>%
mutate(un = map(t$micro, unlist))
t$un
t$micro
t$micro
t$micro[[1]]
t$micro[[1]][["mean"]]
t <- t %>%
mutate(micro = map(t$n,f))%>%
mutate(mean  = map(t$n, mean))
View(t)
View(t)
t$micro
t$micro[[1]]
t$micro[[1]][[1]]
t$micro[[1]][[2]]
View(t)
t <- t %>%
mutate(micro = map(t$n,f))%>%
mutate(mean  = map(t$n, funcion(x) mean(x[[2]])))
t <- t %>%
mutate(micro = map(t$n,f))%>%
mutate(mean  = map(t$n, funcion(x) {mean(x[[2]])} ))
t <- tibble(n=1:30)
t <- t %>%
mutate(micro = map(t$n,f))%>%
mutate(mean  = map(t$micro, mean))
View(t)
t <- t %>%
mutate(micro = map(t$n,f))%>%
t <- t %>%
mutate(micro = map(t$n,f))
View(t)
class(t$micro[[1]])
class(t$micro)
t <- tibble(n=1:30)
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(un  = map(t$micro, unlist))
t <- t %>%
mutate(micro = map(t$n,f))
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(un  = map(micro, unlist))
View(t)
class(t$un)
t$un
class(t$un[[1]])
t$un[[1]
t$un[[1]]
s <- t$un[[1]]
s <- t$micro[[1]]
View(s)
mean(s)
print(s)
s$time
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(un  = map(micro$time, unlist))
s$time
micro_mean <- function(micro){
mean(micro$time)
}
library(microbenchmark)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
t <- tibble(n=1:30)
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(un  = map(micro, micro_mean))
View(t)
micro_mean <- function(micro){
median(micro$time)
}
t <- tibble(n=1:30)
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(un  = map(micro, micro_mean))
View(t)
library(microbenchmark)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
t <- tibble(n=1:300)
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(mean  = map(micro, micro_mean)) %>%
mutate(avg_cost = mean/n)
View(t)
micro_mean <- function(micro){
mean(micro$time)
}
t <- tibble(n=1:)
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(mean  = map(micro, micro_mean))
t <- tibble(n=1:3)
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(mean  = map(micro, micro_mean))
View(t)
mutate(t, avg_cost = mean/n)
mutate(t, avg_cost = `mean`/n)
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(avg  = map(micro, micro_mean)) %>%
mutate(t, avg_cost = avg/n)
class(t$avg)
t <- tibble(n=1:3)
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(avg  = map(micro, micro_mean))
View(t)
class(t$avg)
t$avg$1
t$avg[1]
mutate(t,avg = unlist(avg))
t <- tibble(n=1:3)
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(avg  = map(micro, micro_mean)) %>%
mutate(t,avg = unlist(avg)) %>%
mutate( avg_cost = avg/n)
View(t)
library(microbenchmark)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
t <- tibble(n=1:300)
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(avg  = map(micro, micro_mean)) %>%
mutate(t,avg = unlist(avg)) %>%
mutate( avg_cost = avg/n)
View(t)
library(microbenchmark)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
t <- tibble(n=1:3)
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(avg  = map(micro, micro_mean)) %>%
mutate(avg = unlist(avg)) %>%
mutate( avg_cost = avg/n)
View(t)
t <- tibble(n=seq(1,1000,10))
View(t)
library(microbenchmark)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
t <- tibble(n=seq(1=1,1001,10))
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(avg  = map(micro, micro_mean)) %>%
mutate(avg = unlist(avg)) %>%
mutate( avg_cost = avg/n)
t <- tibble(n=seq(1=1,1001,10))
t <- tibble(n=seq(1,1001,10))
library(microbenchmark)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
t <- tibble(n=seq(1,1001,10))
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(avg  = map(micro, micro_mean)) %>%
mutate(avg = unlist(avg)) %>%
mutate( avg_cost = avg/n)
View(t)
library(microbenchmark)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
t <- tibble(runs=seq(1,101,10))
t <- t %>%
mutate(micro = map(t$n,f)) %>%
mutate(avg  = map(micro, micro_mean)) %>%
mutate(avg = unlist(avg)) %>%
mutate( avg_cost = avg/runs)
library(microbenchmark)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
t <- tibble(runs=seq(1,101,10))
t <- t %>%
mutate(micro = map(t$runs,f)) %>%
mutate(avg  = map(micro, micro_mean)) %>%
mutate(avg = unlist(avg)) %>%
mutate( avg_cost = avg/runs)
View(t)
library(microbenchmark)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
t <- tibble(runs=seq(10,10^6,10))
t <- t %>%
mutate(micro = map(t$runs,f)) %>%
mutate(avg  = map(micro, micro_mean)) %>%
mutate(avg = unlist(avg)) %>%
mutate( avg_cost = avg/runs)
library(microbenchmark)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
t <- tibble(runs=seq(10,10^4,10))
t <- t %>%
mutate(micro = map(t$runs,f)) %>%
mutate(avg  = map(micro, micro_mean)) %>%
mutate(avg = unlist(avg)) %>%
mutate( avg_cost = avg/runs)
library(microbenchmark)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
t <- tibble(runs=seq(10,10^4,100))
t <- t %>%
mutate(micro = map(t$runs,f)) %>%
mutate(avg  = map(micro, micro_mean)) %>%
mutate(avg = unlist(avg)) %>%
mutate( avg_cost = avg/runs)
ggplot(t) + aes(c(x=runs, y=avg_cost)) + geom_col()
ggplot(t) + aes(x=runs, y=avg_cost) + geom_line()
library(microbenchmark)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
t <- tibble(runs=seq(10^3,10^5,10^3))
t <- t %>%
mutate(micro = map(t$runs,f)) %>%
mutate(avg  = map(micro, micro_mean)) %>%
mutate(avg = unlist(avg)) %>%
mutate( avg_cost = avg/runs)
ggplot(t) + aes(x=runs, y=avg_cost) + geom_line()
library(microbenchmark)
library(MonteCarlo)
micro_monte(n){
micro <- microbenchmark(n)
return(mean(n$times))
}
micro_monte(n) {
micro <- microbenchmark(n)
return(mean(micro$times))
}
micro_monte <- function(n){
micro <- microbenchmark(n)
return(mean(micro$times))
}
micro_monte(5)
micro_monte <- function(n){
micro <- microbenchmark(runif(n))
return(mean(micro$times))
}
micro_monte(5)
micro <- microbenchmark(runif(5))
micro
micro_monte <- function(n){
micro <- microbenchmark(runif(n))
return(mean(micro$time))
}
micro_monte(5)
micro_monte <- function(n){
micro <- microbenchmark(runif(n))
return(mean(micro$time)/n)
}
micro_monte(5)
?MonteCarlo
MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1)
library(microbenchmark)
library(MonteCarlo)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
micro_monte <- function(n){
micro <- microbenchmark(runif(n))
return("time"=mean(micro$time)/n)
}
micro <- microbenchmark(runif(5))
t <- tibble(runs=seq(10^3,10^5,10^3))
t <- t %>%
mutate(micro = map(t$runs,f)) %>%
mutate(avg  = map(micro, micro_mean)) %>%
mutate(avg = unlist(avg)) %>%
mutate( avg_cost = avg/runs)
library(microbenchmark)
library(MonteCarlo)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
micro_monte <- function(n){
micro <- microbenchmark(runif(n))
return("time"=mean(micro$time)/n)
}
micro <- microbenchmark(runif(5))
View(micro)
micro <- micro_monte(5)
MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1)
library(microbenchmark)
library(MonteCarlo)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
micro_monte <- function(n){
micro <- microbenchmark(runif(n))
return(list("time"=mean(micro$time)/n))
}
micro <- micro_monte(5)
MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1, ncpus = 2)
library(snowfall)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1, ncpus = 2)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:1000)), nrep = 1, ncpus = 2)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:1000)), nrep = 1, ncpus = 2)
MC
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10^5)), nrep = 1, ncpus = 2, time_n_test = TRUE)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10^5)), nrep = 1, ncpus = 2, time_n_test = TRUE, max_grid = 10^6)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1, ncpus = 2, time_n_test = TRUE, max_grid = 10^6)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1, ncpus = 2, time_n_test = TRUE)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:1000)), nrep = 1, ncpus = 2, time_n_test = TRUE)
rm(list=ls())
library(microbenchmark)
library(MonteCarlo)
f <- function(n){
microbenchmark(n)
}
micro_mean <- function(micro){
mean(micro$time)
}
micro_monte <- function(n){
micro <- microbenchmark(runif(n))
return(list("time"=mean(micro$time)/n))
}
library(snowfall)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:1000)), nrep = 1, ncpus = 2, time_n_test = TRUE)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1, ncpus = 2)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1, ncpus = 2, time_n_test = TRUE)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1, ncpus = 1, time_n_test = TRUE)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1,  time_n_test = TRUE)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1, time_n_test = TRUE)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 2, time_n_test = TRUE)
list("n"=c(1:10))
rm(MC)
MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1, time_n_test = TRUE)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1, ncpus = 2)
MC <- MonteCarlo(micro_monte, param_list = list("n"=c(1:10)), nrep = 1, ncpus = 2)
tibble_gen <- function(n){
return(tibble(runs = seq((n*1000),((n+1)*10000))))
}
t <- tibble_gen(1)
View(t)
tibble_gen <- function(n){
return(tibble(runs = seq((n*1000),((n+1)*1000))))
}
t <- tibble_gen(1)
tibble_gen <- function(n){
return(tibble(runs = seq((n*1000),((n+1)*1000 -1))))
}
t <- tibble_gen(1)
t <- tibble_gen(1:10)
a <- 1:10
t <- map(1:10, tibble_gen)
t
micro_monte <- function(n){
micro <- microbenchmark(runif(n))
return(list("time"=mean(micro$time)/n))
}
t<- tibble(runs=1:10)
t <- t %>%
mutate(micro = map(t$runs,micro_monte))
View(t)
micro_monte <- function(n){
micro <- microbenchmark(runif(n))
return(mean(micro$time))
}
t <- tibble(runs=seq(10^3,10^5,10^3))
t<- tibble(runs=1:10)
t<- tibble(runs=1:10)
t <- t %>%
mutate(micro = map(t$runs,micro_monte))
View(t)
micro_monte <- function(n){
if (n%100==0){
print(n)
}
micro <- microbenchmark(runif(n))
return(mean(micro$time))
}
micro_monte <- function(n){
if (n%100==0) {
print(n)
}
micro <- microbenchmark(runif(n))
return(mean(micro$time))
}
micro_monte <- function(n){
if (n%%100==0) {
print(n)
}
micro <- microbenchmark(runif(n))
return(mean(micro$time))
}
t<- tibble(runs=1:10)
t <- t %>%
mutate(micro = map(t$runs,micro_monte))
t<- tibble(runs=1:150)
t <- t %>%
mutate(micro = map(t$runs,micro_monte))
getwd
getwd()
setwd(..)
setwd("..")
getwd()
t<- 1:10
for (i in t){
write.csv(c(n,micro_monte(i)),append=TRUE)
}
t<- 1:10
for (i in t){
write.csv(c(i,micro_monte(i)),append=TRUE)
}
t<- 1:10
for (i in t){
write.csv(c(i,micro_monte(i)),append=TRUE, file = "optimumrandomness.csv")
}
t<- 1:10
for (i in t){
line = paste(i, micro_monte(i), sep=",")
write(file = "optimumrandomness.csv", line, append = TRUE)
}
micro_monte <- function(n){
micro <- microbenchmark(runif(n))
return(mean(micro$time)/n)
}
t<- 1:100
for (i in t){
line = paste(i, micro_monte(i), sep=",")
write(file = "optimumrandomness.csv", line, append = TRUE)
}
i<-1
while(TRUE){
i <- i+1
line = paste(i, micro_monte(i), sep=",")
write(file = "optimumrandomness.csv", line, append = TRUE)
}
t<- 1:10^7
for (i in t){
line = paste(i, micro_monte(i), sep=",")
write(file = "optimumrandomness.csv", line, append = TRUE)
}
t <- read_csv("optimumrandomness.csv")
t <- read_csv("optimumrandomness.csv",col_names = FALSE)
View(t)
ggplot(t) + aes(x=X1, y=X2) + geom_line()
121000*2
(121000*2)/(60*60)
