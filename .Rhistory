mutate(length = str_length(name)) %>%
left_join(binary) %>%
rowwise() %>%
mutate(score_with_blanks = word_to_score(name, sequence))
blank_scores <- alias_scores %>%
mutate(name = name %>%
str_to_lower() %>%
str_remove_all("\\W")) %>%
filter(score > Number) %>%
mutate(length = str_length(name)) %>%
left_join(binary) %>%
rowwise() %>%
mutate(score_with_blanks = word_to_score(name, sequence))
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE
)
library("tidyverse")
library("DT")
library("plotly")
theme <- ggthemes::theme_few()
scores <- tibble(
letters = letters,
score = c(1,3,3,
2,1,4,
2,4,1,
8,5,1,
3,1,1,
3,10,1,
1,1,1,
4,4,8,
4,10)
)
convert_word_to_score <- function(word){
suppressMessages(str_to_lower(word) %>%
str_extract_all("[a-z]") %>%
unlist() %>%
tibble(letters=.) %>%
left_join(scores) %>%
pull(score) %>%
sum())
}
convert_word_to_score("one")
base_scores <- tribble(
~number, ~name,
0,	"Zero",
1,	"One",
2,	"Two",
3,	"Three",
4, "Four",
5,	"Five",
6,	"Six",
7,	"Seven",
8,	"Eight",
9,	"Nine",
10,	"Ten",
11,	"Eleven",
12,	"Twelve",
13,	"Thirteen",
14,	"Fourteen",
15,	"Fifteen",
16,	"Sixteen" ,
17,	"Seventeen",
18,	"Eighteen",
19,	"Nineteen" ,
20,	"Twenty"
) %>%
rowwise() %>%
mutate(score = convert_word_to_score(name))
filter(base_scores, number==score)
base_scores %>%
ggplot(aes(x=number,y=score)) + geom_point() + geom_line(aes(x=0:20,y=0:20)) + theme + ggtitle("Twelve is the only number with its own Scrabble score", subtitle = "Line y=x added")
base_scores %>%
filter(number>0) %>% # Whoops, don't divide by zero.
mutate(relative_score = score/number) %>%
ggplot(aes(x=number, y=relative_score)) + geom_point() + theme + geom_hline(yintercept = 1) + labs(
title= "Small numbers score greater than themselves\n
but large numbers smaller.",
y="Score/number"
)
alias_scores <- read_csv(here::here("public", "data", "Wiki", "names_of_numbers.csv")) %>%
separate(3, as.character(1:100),"," ) %>%
gather("key", "name", -Number) %>%
select(-key) %>%
drop_na() %>%
mutate(name = str_extract(name,"[a-zA-Z \\-]+")) %>% #Too many footnotes and references to countries that need dropping
drop_na() %>%
rowwise() %>%
mutate(score = convert_word_to_score(name))
datatable(alias_scores, rownames = F)
alias_scores %>%
filter(Number==score) %>%
knitr::kable()
names %>%
filter(Number>0) %>%
mutate(relative_score = score/Number) %>%
ggplot(aes(x=Number, y=relative_score)) + geom_point() + theme + geom_hline(yintercept = 1) + labs(
title = "There are more winning numbers if we take other common names",
y="Score/Number"
)
word_to_score <- function(word, modifier=1){
#I am terrible at writing vectorised functions.
if(class(modifier)=="list") modifier<-unlist(modifier)
suppressMessages(str_to_lower(word) %>%
str_extract_all("[a-z]") %>%
unlist() %>%
tibble(letters=., modifier=modifier) %>%
left_join(scores) %>%
summarise(score = sum(score * modifier)) %>%
pull()
)
}
binary <- list(crossing(0:1))
for(i in 2:12){
binary <- append(binary,
list(
crossing(binary[[i-1]],0:1)
)
)
}
binary <- map(binary, transpose) %>%
flatten() %>%
tibble(sequence=.) %>%
rowwise() %>%
mutate(length = length(sequence)) %>%
ungroup()
blank_scores <- alias_scores %>%
mutate(name = name %>%
str_to_lower() %>%
str_remove_all("\\W")) %>%
filter(score > Number) %>%
mutate(length = str_length(name)) %>%
left_join(binary) %>%
rowwise() %>%
mutate(score_with_blanks = word_to_score(name, sequence))
blank_scores <- alias_scores %>%
mutate(name = name %>%
str_to_lower() %>%
str_remove_all("\\W")) %>%
filter(score > Number) %>%
mutate(length = str_length(name)) %>%
left_join(binary)
pb <- progress_estimated(nrow(blank_scores))
blank_scores %>%
rowwise() %>%
mutate(score_with_blanks = ~({
word_to_score(name, sequence)
pb$tick()$print()
}))
blank_scores %>%
rowwise() %>%
mutate(score_with_blanks = function(row){
word_to_score(row$name, row$sequence)
pb$tick()$print()
})
?progress_estimated
1 %>% pb$tick()$print()
a <- 1 %>% pb$tick()$print()
a
a <- 1 %>% invisible(pb$tick()$print())
invisible(pb$tick())
invisible(pb$tick()$print())
invisible(pb$tick()$print())
invisible(pb$tick()$print())
invisible(function(x) pb$tick()$print())
1 %>% invisible(function(x) pb$tick()$print())
blank_scores <- alias_scores %>%
mutate(name = name %>%
str_to_lower() %>%
str_remove_all("\\W")) %>%
filter(score > Number) %>%
mutate(length = str_length(name)) %>%
left_join(binary) %>%
rowwise() %>%
mutate(score_with_blanks = word_to_score(name, sequence))
blank_scores
blank_scores %>%
filter(Number == score_with_blanks)
blank_scores %>%
select(Number, name, score_with_blanks) %>%
filter(Number == score_with_blanks) %>%
unique()
blank_scores %>%
select(Number, name, score_with_blanks) %>%
filter(Number == score_with_blanks) %>%
unique() %>% View()
blank_scores %>%
select(Number, score_with_blanks) %>%
filter(Number == score_with_blanks) %>%
unique() %>% View()
blogdown::serve_site()
blogdown::build_site()
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE
)
library("tidyverse")
library("DT")
library("plotly")
theme <- ggthemes::theme_few()
scores <- tibble(
letters = letters,
score = c(
1, 3, 3,
2, 1, 4,
2, 4, 1,
8, 5, 1,
3, 1, 1,
3, 10, 1,
1, 1, 1,
4, 4, 8,
4, 10
)
)
convert_word_to_score <- function(word) {
suppressMessages(str_to_lower(word) %>%
str_extract_all("[a-z]") %>%
unlist() %>%
tibble(letters = .) %>%
left_join(scores) %>%
pull(score) %>%
sum())
}
convert_word_to_score("one")
base_scores <- tribble(
~number, ~name,
0, "Zero",
1, "One",
2, "Two",
3, "Three",
4, "Four",
5, "Five",
6, "Six",
7, "Seven",
8, "Eight",
9, "Nine",
10, "Ten",
11, "Eleven",
12, "Twelve",
13, "Thirteen",
14, "Fourteen",
15, "Fifteen",
16, "Sixteen",
17, "Seventeen",
18, "Eighteen",
19, "Nineteen",
20, "Twenty"
) %>%
rowwise() %>%
mutate(score = convert_word_to_score(name))
filter(base_scores, number == score)
base_scores %>%
ggplot(aes(x = number, y = score)) + geom_point() + geom_line(aes(x = 0:20, y = 0:20)) + theme + ggtitle("Twelve is the only number with its own Scrabble score", subtitle = "Line y=x added")
base_scores %>%
filter(number > 0) %>% # Whoops, don't divide by zero.
mutate(relative_score = score / number) %>%
ggplot(aes(x = number, y = relative_score)) + geom_point() + theme + geom_hline(yintercept = 1) + labs(
title = "Small numbers score greater than themselves\n
but large numbers smaller.",
y = "Score/number"
)
alias_scores <- read_csv(here::here("static", "data", "Wiki", "names_of_numbers.csv")) %>%
separate(3, as.character(1:100), ",") %>%
gather("key", "name", -Number) %>%
select(-key) %>%
drop_na() %>%
mutate(name = str_extract(name, "[a-zA-Z \\-]+")) %>% # Too many footnotes and references to countries that need dropping
drop_na() %>%
rowwise() %>%
mutate(score = convert_word_to_score(name))
DT::datatable(alias_scores, rownames = F)
alias_scores <- read_csv(here::here("static", "data", "Wiki", "names_of_numbers.csv")) %>%
separate(3, as.character(1:100), ",") %>%
gather("key", "name", -Number) %>%
select(-key) %>%
drop_na() %>%
mutate(name = str_extract(name, "[a-zA-Z \\-]+")) %>% # Too many footnotes and references to countries that need dropping
drop_na() %>%
rowwise() %>%
mutate(score = convert_word_to_score(name)) %>%
arrange(Number)
DT::datatable(alias_scores, rownames = F)
install.packages(c("ape", "aqp", "blogdown", "ca", "carData", "Ckmeans.1d.dp", "cli", "coda", "commonmark", "cubature", "data.table", "data.tree", "devtools", "DiceDesign", "DiceKriging", "digest", "dimRed", "doParallel", "dplyr", "DT", "evaluate", "extraDistr", "fansi", "flextable", "future", "gamlss.data", "ggplot2", "ggridges", "globals", "h2o", "htmlwidgets", "ipred", "koRpus", "later", "longmemo", "magic", "magick", "MASS", "Matrix", "microbenchmark", "mime", "modeest", "ModelMetrics", "NLP", "osmdata", "packcircles", "pander", "plotrix", "pmml", "pROC", "ps", "psych", "R6", "raster", "Rcpp", "RcppArmadillo", "RcppCCTZ", "RcppParallel", "repr", "reprex", "reshape", "rgdal", "rlang", "robustbase", "rstudioapi", "rticles", "servr", "sf", "shiny", "shinydashboard", "shinythemes", "sjmisc", "sm", "sn", "snow", "spatstat.utils", "spData", "storr", "testthat", "tidyr", "tidyselect", "tinytex", "TTR", "tweenr", "units", "webshot", "xfun", "xts", "zoo"))
install.packages(c("ape", "aqp", "blogdown", "ca", "carData", "Ckmeans.1d.dp", "cli", "coda", "commonmark", "cubature", "data.table", "data.tree", "devtools", "DiceDesign", "DiceKriging", "digest", "dimRed", "doParallel", "dplyr", "DT", "evaluate", "extraDistr", "fansi", "flextable", "future", "gamlss.data", "ggplot2", "ggridges", "globals", "h2o", "htmlwidgets", "ipred", "koRpus", "later", "longmemo", "magic", "magick", "MASS", "Matrix", "microbenchmark", "mime", "modeest", "ModelMetrics", "NLP", "osmdata", "packcircles", "pander", "plotrix", "pmml", "pROC", "ps", "psych", "R6", "raster", "Rcpp", "RcppArmadillo", "RcppCCTZ", "RcppParallel", "repr", "reprex", "reshape", "rgdal", "rlang", "robustbase", "rstudioapi", "rticles", "servr", "sf", "shiny", "shinydashboard", "shinythemes", "sjmisc", "sm", "sn", "snow", "spatstat.utils", "spData", "storr", "testthat", "tidyr", "tidyselect", "tinytex", "TTR", "tweenr", "units", "webshot", "xfun", "xts", "zoo"))
install.packages(c("ape", "aqp", "blogdown", "ca", "carData", "Ckmeans.1d.dp", "cli", "coda", "commonmark", "cubature", "data.table", "data.tree", "devtools", "DiceDesign", "DiceKriging", "digest", "dimRed", "doParallel", "dplyr", "DT", "evaluate", "extraDistr", "fansi", "flextable", "future", "gamlss.data", "ggplot2", "ggridges", "globals", "h2o", "htmlwidgets", "ipred", "koRpus", "later", "longmemo", "magic", "magick", "MASS", "Matrix", "microbenchmark", "mime", "modeest", "ModelMetrics", "NLP", "osmdata", "packcircles", "pander", "plotrix", "pmml", "pROC", "ps", "psych", "R6", "raster", "Rcpp", "RcppArmadillo", "RcppCCTZ", "RcppParallel", "repr", "reprex", "reshape", "rgdal", "rlang", "robustbase", "rstudioapi", "rticles", "servr", "sf", "shiny", "shinydashboard", "shinythemes", "sjmisc", "sm", "sn", "snow", "spatstat.utils", "spData", "storr", "testthat", "tidyr", "tidyselect", "tinytex", "TTR", "tweenr", "units", "webshot", "xfun", "xts", "zoo"))
install.packages(c("ape", "aqp", "blogdown", "ca", "carData", "Ckmeans.1d.dp", "cli", "coda", "commonmark", "cubature", "data.table", "data.tree", "devtools", "DiceDesign", "DiceKriging", "digest", "dimRed", "doParallel", "dplyr", "DT", "evaluate", "extraDistr", "fansi", "flextable", "future", "gamlss.data", "ggplot2", "ggridges", "globals", "h2o", "htmlwidgets", "ipred", "koRpus", "later", "longmemo", "magic", "magick", "MASS", "Matrix", "microbenchmark", "mime", "modeest", "ModelMetrics", "NLP", "osmdata", "packcircles", "pander", "plotrix", "pmml", "pROC", "ps", "psych", "R6", "raster", "Rcpp", "RcppArmadillo", "RcppCCTZ", "RcppParallel", "repr", "reprex", "reshape", "rgdal", "rlang", "robustbase", "rstudioapi", "rticles", "servr", "sf", "shiny", "shinydashboard", "shinythemes", "sjmisc", "sm", "sn", "snow", "spatstat.utils", "spData", "storr", "testthat", "tidyr", "tidyselect", "tinytex", "TTR", "tweenr", "units", "webshot", "xfun", "xts", "zoo"))
install.packages(c("ape", "aqp", "blogdown", "ca", "carData", "Ckmeans.1d.dp", "cli", "coda", "commonmark", "cubature", "data.table", "data.tree", "devtools", "DiceDesign", "DiceKriging", "digest", "dimRed", "doParallel", "dplyr", "DT", "evaluate", "extraDistr", "fansi", "flextable", "future", "gamlss.data", "ggplot2", "ggridges", "globals", "h2o", "htmlwidgets", "ipred", "koRpus", "later", "longmemo", "magic", "magick", "MASS", "Matrix", "microbenchmark", "mime", "modeest", "ModelMetrics", "NLP", "osmdata", "packcircles", "pander", "plotrix", "pmml", "pROC", "ps", "psych", "R6", "raster", "Rcpp", "RcppArmadillo", "RcppCCTZ", "RcppParallel", "repr", "reprex", "reshape", "rgdal", "rlang", "robustbase", "rstudioapi", "rticles", "servr", "sf", "shiny", "shinydashboard", "shinythemes", "sjmisc", "sm", "sn", "snow", "spatstat.utils", "spData", "storr", "testthat", "tidyr", "tidyselect", "tinytex", "TTR", "tweenr", "units", "webshot", "xfun", "xts", "zoo"))
install.packages(c("ape", "aqp", "blogdown", "ca", "carData", "Ckmeans.1d.dp", "cli", "coda", "commonmark", "cubature", "data.table", "data.tree", "devtools", "DiceDesign", "DiceKriging", "digest", "dimRed", "doParallel", "dplyr", "DT", "evaluate", "extraDistr", "fansi", "flextable", "future", "gamlss.data", "ggplot2", "ggridges", "globals", "h2o", "htmlwidgets", "ipred", "koRpus", "later", "longmemo", "magic", "magick", "MASS", "Matrix", "microbenchmark", "mime", "modeest", "ModelMetrics", "NLP", "osmdata", "packcircles", "pander", "plotrix", "pmml", "pROC", "ps", "psych", "R6", "raster", "Rcpp", "RcppArmadillo", "RcppCCTZ", "RcppParallel", "repr", "reprex", "reshape", "rgdal", "rlang", "robustbase", "rstudioapi", "rticles", "servr", "sf", "shiny", "shinydashboard", "shinythemes", "sjmisc", "sm", "sn", "snow", "spatstat.utils", "spData", "storr", "testthat", "tidyr", "tidyselect", "tinytex", "TTR", "tweenr", "units", "webshot", "xfun", "xts", "zoo"))
install.packages("RcppParallel")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown:::serve_site()
library("DT")
library("DT")
datatable()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE
)
library("tidyverse")
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE
)
library("tidyverse")
library("DT")
library("plotly")
theme <- ggthemes::theme_few()
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE
)
library("tidyverse")
library("DT")
library("plotly")
theme <- ggthemes::theme_few()
scores <- tibble(
letters = letters,
score = c(
1, 3, 3,
2, 1, 4,
2, 4, 1,
8, 5, 1,
3, 1, 1,
3, 10, 1,
1, 1, 1,
4, 4, 8,
4, 10
)
)
convert_word_to_score <- function(word) {
suppressMessages(str_to_lower(word) %>%
str_extract_all("[a-z]") %>%
unlist() %>%
tibble(letters = .) %>%
left_join(scores) %>%
pull(score) %>%
sum())
}
convert_word_to_score("one")
base_scores <- tribble(
~number, ~name,
0, "Zero",
1, "One",
2, "Two",
3, "Three",
4, "Four",
5, "Five",
6, "Six",
7, "Seven",
8, "Eight",
9, "Nine",
10, "Ten",
11, "Eleven",
12, "Twelve",
13, "Thirteen",
14, "Fourteen",
15, "Fifteen",
16, "Sixteen",
17, "Seventeen",
18, "Eighteen",
19, "Nineteen",
20, "Twenty"
) %>%
rowwise() %>%
mutate(score = convert_word_to_score(name))
filter(base_scores, number == score) %>%
knitr::kable()
base_scores %>%
ggplot(aes(x = number, y = score)) + geom_point() + geom_line(aes(x = 0:20, y = 0:20)) + theme + ggtitle("Twelve is the only number with its own Scrabble score", subtitle = "Line y=x added")
base_scores %>%
filter(number > 0) %>% # Whoops, don't divide by zero.
mutate(relative_score = score / number) %>%
ggplot(aes(x = number, y = relative_score)) + geom_point() + theme + geom_hline(yintercept = 1) + labs(
title = "Small numbers score greater than themselves\n
but large numbers smaller.",
y = "Score/number"
)
alias_scores <- read_csv(here::here("static", "data", "Wiki", "names_of_numbers.csv")) %>%
separate(3, as.character(1:100), ",") %>%
gather("key", "name", -Number) %>%
select(-key) %>%
drop_na() %>%
mutate(name = str_extract(name, "[a-zA-Z \\-]+")) %>% # Too many footnotes and references to countries that need dropping
drop_na() %>%
rowwise() %>%
mutate(score = convert_word_to_score(name)) %>%
arrange(Number)
knitr::kable(alias_scores, rownames = F)
alias_scores %>%
filter(Number==score) %>%
knitr::kable()
alias_scores %>%
filter(Number > 0) %>%
mutate(relative_score = score / Number) %>%
ggplot(aes(x = Number, y = relative_score)) + geom_point() + theme + geom_hline(yintercept = 1) + labs(
title = "There are more winning numbers if we take other common name",
y = "Score/Number"
)
word_to_score <- function(word, modifier = 1) {
# I am terrible at writing vectorised functions.
if (class(modifier) == "list") modifier <- unlist(modifier)
suppressMessages(str_to_lower(word) %>%
str_extract_all("[a-z]") %>%
unlist() %>%
tibble(letters = ., modifier = modifier) %>%
left_join(scores) %>%
summarise(score = sum(score * modifier)) %>%
pull())
}
binary <- list(crossing(0:1))
for (i in 2:12) {
binary <- append(
binary,
list(
crossing(binary[[i - 1]], 0:1)
)
)
}
binary <- map(binary, transpose) %>%
flatten() %>%
tibble(sequence = .) %>%
rowwise() %>%
mutate(length = length(sequence)) %>%
ungroup()
blank_scores <- alias_scores %>%
mutate(name = name %>%
str_to_lower() %>%
str_remove_all("\\W")) %>%
filter(score > Number) %>%
mutate(length = str_length(name)) %>%
left_join(binary) %>%
rowwise() %>%
mutate(score_with_blanks = word_to_score(name, sequence))
blank_scores %>%
select(Number, name, score_with_blanks) %>%
filter(Number == score_with_blanks) %>%
unique() %>%
ungroup() %>%
dplyr::arrange(Number) %>%
knitr::kable()
blankify <- function(word, mask) {
word %>%
str_extract_all("[a-z]") %>%
unlist() %>%
replace(which(mask == 0), "☐") %>%
str_flatten()
}
blank_scores %>%
select(Number, sequence, name, score_with_blanks) %>%
filter(Number == score_with_blanks) %>%
mutate(name_with_blanks = blankify(name, sequence)) %>%
select(name, name_with_blanks,Number) %>%
ungroup() %>%
dplyr::arrange(Number) %>%
knitr::kable()
?collect()
?gather
?spread
blank_scores %>%
select(Number, sequence, name, score_with_blanks) %>%
filter(Number == score_with_blanks) %>%
mutate(name_with_blanks = blankify(name, sequence)) %>%
select(name, name_with_blanks,Number) %>%
group_by(Number) %>%
summarise(name = str_flatten(name, " , "))
blank_scores %>%
select(Number, sequence, name, score_with_blanks) %>%
filter(Number == score_with_blanks) %>%
mutate(name_with_blanks = blankify(name, sequence)) %>%
select(name, name_with_blanks,Number) %>%
group_by(Number) %>%
summarise(name = str_flatten(name, " , ")) %>% View()
blank_scores %>%
select(Number, sequence, name, score_with_blanks) %>%
filter(Number == score_with_blanks) %>%
mutate(name_with_blanks = blankify(name, sequence)) %>%
select(name, name_with_blanks,Number) %>%
group_by(name) %>%
summarise(name_with_blanks = str_flatten(name_with_blanks, " , "))
blank_scores %>%
select(Number, sequence, name, score_with_blanks) %>%
filter(Number == score_with_blanks) %>%
mutate(name_with_blanks = blankify(name, sequence)) %>%
select(name, name_with_blanks,Number) %>%
group_by(name) %>%
summarise(name_with_blanks = str_flatten(name_with_blanks, " , ")) %>% View()
blank_scores %>%
select(Number, sequence, name, score_with_blanks) %>%
filter(Number == score_with_blanks) %>%
mutate(name_with_blanks = blankify(name, sequence)) %>%
select(name, name_with_blanks,Number) %>%
group_by(Number, name) %>%
summarise(name_with_blanks = str_flatten(name_with_blanks, " , ")) %>% View()
blogdown::serve_site()
